plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.3'
	id 'io.spring.dependency-management' version '1.1.3'
//	id 'com.netflix.dgs.codegen' version '6.0.2'
	id 'com.netflix.dgs.codegen' version '5.6.6'
}

group = 'com.course'
version = '2.0.0'

java {
	sourceCompatibility = '17'
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
//	implementation 'com.netflix.graphql.dgs:graphql-dgs-subscriptions-websockets-autoconfigure'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
//	implementation(platform('com.netflix.graphql.dgs:graphql-dgs-platform-dependencies:6.0.0'))
	implementation(platform('com.netflix.graphql.dgs:graphql-dgs-platform-dependencies:7.5.1'))
	implementation 'com.netflix.graphql.dgs:graphql-dgs-spring-boot-starter'
	implementation 'com.netflix.graphql.dgs:graphql-dgs-extended-scalars'

	implementation 'net.datafaker:datafaker:1.7.0'
	implementation 'org.apache.commons:commons-lang3:3.12.0'
}

tasks.named('test') {
	useJUnitPlatform()
}

generateJava{
	packageName = 'com.course.graphql.generated'
	typeMapping = [
	        "Date": "java.time.LocalDate",
			"NonNegativeInt": "java.lang.Integer",
			"Url": "java.net.URL"
	]
	generateClient = true
}
